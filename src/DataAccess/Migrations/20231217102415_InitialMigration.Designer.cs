// <auto-generated />
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AlifDbContext))]
    [Migration("20231217102415_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.DbClient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR")
                        .HasColumnName("id");

                    b.Property<string>("Digest")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("digest");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("name");

                    b.Property<string>("WalletId")
                        .IsRequired()
                        .HasColumnType("VARCHAR")
                        .HasColumnName("wallet_id");

                    b.HasKey("Id");

                    b.HasIndex("WalletId")
                        .IsUnique();

                    b.ToTable("clients", (string)null);
                });

            modelBuilder.Entity("DataAccess.DbWallet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR")
                        .HasColumnName("id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("DECIMAL")
                        .HasColumnName("balance");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("wallets", (string)null);
                });

            modelBuilder.Entity("DataAccess.DbClient", b =>
                {
                    b.HasOne("DataAccess.DbWallet", "Wallet")
                        .WithOne("Client")
                        .HasForeignKey("DataAccess.DbClient", "WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("DataAccess.DbWallet", b =>
                {
                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
